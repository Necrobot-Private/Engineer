#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 0.0.0.{build}

# Do not build on tags
skip_tags: false

# Start builds on tags only
skip_non_tags: false

# Skipping commits affecting specific files
skip_commits:
  files:
  - '**\AssemblyInfoRev.*'
  - '**\AssemblyInfo.*'

# Including commits affecting specific files
only_commits:
  files:
    - PoGo.NecroBot.CLI/
    - PoGo.NecroBot.GUI/
    - FeroxRev/
    - POGOProtos/
    - packages/
    - .gitmodules
    - '*.yml'
#	
pull_requests:
  do_not_increment_build_number: true
  
#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
- ps: >-
    if ($env:APPVEYOR_REPO_TAG -eq "true")
    {
        if ($env:APPVEYOR_REPO_TAG -match "-rev")
        {
            $env:NecroBot2_IsRev = "true";
            $env:NecroBot2_Version = $env:APPVEYOR_REPO_TAG_NAME.Replace("v", "");
            $env:NecroBot2_Version = $env:NecroBot2_Version.Replace("-rev", ".");
            $env:NecroBot2_InformationalVersion = "$env:APPVEYOR_REPO_TAG_NAME";
            $env:APPVEYOR_Assembly_Info_File = "**\AssemblyInfoRev.*";
        }
        else
        {
            $env:NecroBot2_IsRev = "false";
            $env:NecroBot2_Version = $env:APPVEYOR_REPO_TAG_NAME.Replace("v", "");
            $env:NecroBot2_Version = "$($env:NecroBot2_Version).0";
            $env:NecroBot2_InformationalVersion = "$env:APPVEYOR_REPO_TAG_NAME";
            $env:APPVEYOR_Assembly_Info_File = "**\AssemblyInfo.*";
        }
        $fileContent = "-----BEGIN RSA PRIVATE KEY-----`n";
        $fileContent += $env:priv_key.Replace(' ', "`n");
        $fileContent += "`n-----END RSA PRIVATE KEY-----`n";
        Set-Content "$env:USERPROFILE\.ssh\id_rsa" $fileContent;
        git config --global credential.helper store;
        git config --global user.email "$env:github_email";
        git config --global user.name "$env:github_user";
        Set-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token):x-oauth-basic@github.com`n";
    }
    else
    {
        $env:NecroBot2_Version = $env:APPVEYOR_BUILD_VERSION;
        $env:NecroBot2_InformationalVersion = $env:APPVEYOR_BUILD_VERSION;
        $env:APPVEYOR_Assembly_Info_File = "**\AssemblyInfo.*";
    }

# clone directory
clone_folder: c:\projects\necrobot2

# fetch repository as zip archive
shallow_clone: false

# set clone depth
#clone_depth:  5                     # clone entire repository history if not defined

# environment variables
environment:
  access_token:
    secure: 6PJ3cwd4I0DRJPv7w8iFAP6iPp94a4omr0Ajl0exmZ3qEnGLdqDwihlgFBFNBHWU
  github_email:
    secure: BTFs4sc8XE9MG1VhIOZPt6Bbwfq3967JxYsRuNpxTl4=
  github_user:
    secure: pxYfjvhdqgrZKh6Yy3V7Cg==
  priv_key:
    secure: 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

# build cache to preserve files/folders between builds
# cache:
  # - packages -> **\packages.config  # preserve packages directory in the root of build folder but will reset it if packages.config is modified
  # - '%LocalAppData%\NuGet\Cache'

# scripts that run after cloning repository
install:
- ps: >-
    git submodule update --init --recursive;
    if ($env:APPVEYOR_REPO_TAG -eq "true")
    {
        $ErrorActionPreference = "Continue";
        $env:PATH = "C:\Ruby23\bin;$($env:PATH)";
        gem install github_changelog_generator;
        github_changelog_generator --token $env:access_token;
        if ($env:NecroBot2_IsRev -eq "true")
        {
            git add --ignore-errors "PoGo.NecroBot.CLI/Properties/AssemblyInfoRev.cs";
            git add --ignore-errors "PoGo.NecroBot.GUI/Properties/AssemblyInfoRev.cs";
            git add --ignore-errors "PoGo.NecroBot.Logic/Properties/AssemblyInfoRev.cs";
        }
        else
        {
            git add --ignore-errors "PoGo.NecroBot.CLI/Properties/AssemblyInfo.cs";
            git add --ignore-errors "PoGo.NecroBot.GUI/Properties/AssemblyInfo.cs";
            git add --ignore-errors "PoGo.NecroBot.Logic/Properties/AssemblyInfo.cs";
        }
        git commit -m "Auto-Update AssemblyInfo $env:APPVEYOR_REPO_TAG_NAME";
        git commit -m "Auto-Update CHANGELOG.md $env:APPVEYOR_REPO_TAG_NAME" "CHANGELOG.md";
        git pull origin $env:APPVEYOR_REPO_BRANCH;
        git push -f origin $env:APPVEYOR_REPO_BRANCH;
        if ($LastExitCode -ne 0) { $host.SetShouldExit(0); }
    }

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: ' **\AssemblyInfo.*'
  assembly_version: '$(NecroBot2_Version)'
  assembly_file_version: "1.0.0.0"
  assembly_informational_version: '$(NecroBot2_InformationalVersion)'

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x86

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  # MSBuild verbosity level
  verbosity: minimal  #quiet|minimal|normal|detailed


# scripts to run before build
before_build:
  - ps: nuget restore

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:
  - cmd: >-
     if exist %APPVEYOR_BUILD_FOLDER%\release rmdir %APPVEYOR_BUILD_FOLDER%\release /s /q

     mkdir %APPVEYOR_BUILD_FOLDER%\release

     mkdir %APPVEYOR_BUILD_FOLDER%\release\necrobotgui

     xcopy %APPVEYOR_BUILD_FOLDER%\PoGo.NecroBot.CLI\bin\x86\Release\GUI %APPVEYOR_BUILD_FOLDER%\release\necrobotgui /s /e

     mkdir %APPVEYOR_BUILD_FOLDER%\release\necrobot

     xcopy %APPVEYOR_BUILD_FOLDER%\PoGo.NecroBot.CLI\bin\x86\Release %APPVEYOR_BUILD_FOLDER%\release\necrobot /s /e

     rmdir %APPVEYOR_BUILD_FOLDER%\release\necrobot\GUI /s /q

# to run your custom scripts instead of automatic MSBuild
build_script:

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to disable automatic tests
test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  - path: '\release\necrobotgui'
    name: NecroBot2.GUI
  
  - path: '\release\necrobot'
    name: NecroBot2.Console

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

  # Deploy to GitHub Releases
  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    release: NecroBot2 $(APPVEYOR_REPO_TAG_NAME)
    auth_token:
      secure: 6PJ3cwd4I0DRJPv7w8iFAP6iPp94a4omr0Ajl0exmZ3qEnGLdqDwihlgFBFNBHWU 
    artifact: NecroBot2.Console;NecroBot2.GUI
    draft: false
    prerelease: $(NecroBot2_IsRev)
    force_update: true
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true

# scripts to run before deployment
before_deploy:

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:

# on build failure
on_failure:

# after build failure or success
on_finish:
